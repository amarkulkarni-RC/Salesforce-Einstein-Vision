public class PredictionDemoController {
	public Blob imageBlob { get; set; }
    public Boolean showImageDetails { get; set; }
    public String predictionLabel { get; set; }
    
    public PredictionDemoController () {
        showImageDetails = false;
    }
    
    public void predictImage() {
  		showImageDetails = true;        
    }
    
    public String getAccessToken() {
        ContentVersion base64Content = [SELECT Title, VersionData FROM ContentVersion where Title='einstein_platform' OR  Title='predictive_services' ORDER BY Title LIMIT 1];
        String keyContents = base64Content.VersionData.tostring();
        keyContents = keyContents.replace('-----BEGIN RSA PRIVATE KEY-----', '');
        keyContents = keyContents.replace('-----END RSA PRIVATE KEY-----', '');
        keyContents = keyContents.replace('\n', '');

        // Get a new token
        JWT jwt = new JWT('RS256');
        // jwt.cert = 'JWTCert'; // Uncomment this if you used a Salesforce certificate to sign up for an Einstein Platform account
        jwt.pkcs8 = keyContents; // Comment this if you are using jwt.cert
        jwt.iss = 'developer.force.com';
        jwt.sub = '<<USER_NAME>>';
        jwt.aud = 'https://api.einstein.ai/v2/oauth2/token';
        jwt.exp = '3600';
        String access_token = JWTBearerFlow.getAccessToken('https://api.einstein.ai/v2/oauth2/token', jwt);
        System.debug('access_token :: '+ access_token);
        return access_token;    
    }
    
    public List<Vision.Prediction> getCallVisionUrl() {
        // Get a new token
        String access_token = getAccessToken();
        List<Vision.Prediction> predictionList = Vision.predictBlob(imageBlob, access_token, '<<MODEL_ID>>');
        
        Decimal value = 0.0;
        String label='';
        
        for(Vision.Prediction prediction :predictionList){
            if(prediction.probability > value) {
                value = prediction.probability;
                label= prediction.Label;
            }
        }
        
        predictionLabel=label;
        
        return predictionList;
    }
}
